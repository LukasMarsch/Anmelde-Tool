@startuml
Teilnehmer *- Event
Teilnehmer o-- Anmeldung
Teilnehmer - Alter
Teilnehmer -- Rolle
Event o-- Benutzer
Event .. Shuttle
Event *- Essen
Event *- Tarif
Anmeldung -o Event
Anmeldung o.. Halt
Anmeldung o.. Entschuldigung
Anmeldung *-- PostAdresse
Anmeldung *-- jakarta.mail.InetAddress
Anmeldung . Reise


Kirchenbezirk --* Anmeldung
PostAdresse --|> jakarta.mail.Address

Essen *- Mahlzeit
Geschlecht -* Anmeldung
Isst -* Anmeldung


abstract class jakarta.mail.Address {
    +Address()
    +{abstract} equals(Object): Boolean
    +{abstract} getType(): String
    +{abstract} toString(): String
}

class jakarta.mail.InetAddress {
    +Address()
    +equals(Object): Boolean
    +getType(): String
    +toString(): String
}

class Event {
    -String name
    -LocalDate von
    -LocalDate bis
    -Essen erstesEssen
    -Essen letztesEssen
    -Boolean mitKaffee
    -Benutzer creator
    -Set<Benutzer> organisatoren
    -Set<Anmeldung> anmeldungen
    -Set<Shuttle> shuttles
    -Set<Tarif> tarif
    +addBenutzer(Benutzer): void
    +removeBenutzer(Benutzer): void
    +addAnmeldung(Anmeldung): void
    +removeAnmeldung(Anmeldung): void
}

class Tarif {
    LocalDate bisDatum
    double preis
}

class Benutzer {
    -String name
    -String hash
    -LocalDate von
    -LocalDate bis
    -Set<Event> organisiert
    -Boolean administrator
    +addEvent(Event): void
    +removeEvent(Event): void
}

class Teilnehmer {
    -Anmeldung anmeldung
    -Boolean angekommen
    -Boolean anwesend
    -Boolean bestaetigungVersendet
    '-List<String> aufgaben
    -Rolle rolle
    +Teilnehmer(Anmeldung)
    '+addAufgabe(String): void
    '+removeAufgabe(String): void
    +alter(): Alter
}

class Anmeldung {
    -Event event
    -String vorname
    -String nachname
    -InternetAdress mail
    -PostAdresse adresse
    -Kirchenbezirk bezirk
    -String gemeinde
    -LocalDate geburtstag
    -Geschlecht geschlecht
    -Isst isst
    -Set<Essen> anwesend
    -Boolean schwimmer
    -@Nullable String anmerkung
    -@Nullable byte[] einverstaendnisErklaerung
    -String nameNotfallkontakt
    -String nummerNotfallkontakt
    -Halt nimmtShuttleVon
    -@Nullable Entschuldigung entschuldigung
    +Anmeldung(Event)
    +addEssen(Essen): void
    +removeEssen(Essen): void
}

class Entschuldigung {
    -String name
    -PostAdresse anschrift
    -String klasse
}

class Shuttle {
    -Event event
    -List<Halt> haltestellen
    -String detail
}

class Halt {
    -PostAdresse ort
    -LocalTime zeit
    -double preis
}

class PostAdresse {
    -String strasse
    -String hausnummer
    -String plz
    -String stadt
    +PostAdresse()
    +PostAdresse(String, String, String, String)
    +equals(Object): Boolean
    +getType(): String
    +toString(): String
}

enum Mahlzeit {
    FRUEH,
    MITTAG,
    KAFFEE,
    ABEND
}

class Essen {
    +LocalDate tag
    +Mahlzeit mahlzeit
}

enum Geschlecht {
    M,
    W,
    D
}

enum Isst {
    VEGAN,
    VEGETARISCH,
    OMNIVOR
}

enum Reise {
    SELBST,
    SHUTTLE
}

enum Kirchenbezirk {
    BERLIN_BRANDENBURG,
    HESSEN_NORD,
    HESSEN_SUED,
    LAUSITZ,
    NIEDERSACHSEN_OST,
    NIEDERSACHSEN_WEST,
    NIEDERSACHSEN_SUED,
    RHEINLAND_WESTPFALEN,
    SACHSEN_THUERINGEN,
    SUEDDEUTSCHLAND,
    ELKIB
}
enum Alter {
    U16("Unter 16"),
    U18("Unter 18"),
    O18("Über 18")
    -String name
    +Alter(String)
    +getName(): String
}

enum Rolle {
    TEILNEHMER("Teilnehmer", 1),
    WORKSHOPLEITER("Workshopleiter", 0.5),
    WORKSHOPLEITER_MULTI("Workshopleiter mehrere", 1),
    KUECHENTEAM("Küchenteam", 0.5)
    BANDMITGLIED("Bandmitglied", 0.5)
    HELFER("Helfer", 1)
    JUFETEAM("JuFeTeam", 0)

    -String name;
    -float rabatt;
    +Rolle(String, float)
    +getName(): String
    +getRabatt(): float
}
@enduml